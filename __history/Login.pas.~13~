unit Login;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, ShellAPI, Globals, Signup, MainDB,
  EmployeeView, OwnerView, ADODB;

type
  TfrmLogin = class(TForm)
    lblLogin: TLabel;
    lblEnterLoginName: TLabel;
    lblEnterLoginPassword: TLabel;
    edtLoginEmail: TEdit;
    edtLoginPassword: TEdit;
    btnLogin: TButton;
    pnlHeading: TPanel;
    btnSignUp: TButton;
    Label1: TLabel;
    chkRememberMe: TCheckBox;
    procedure FormCreate(Sender: TObject);
    procedure btnSignUpClick(Sender: TObject);
    procedure btnLoginClick(Sender: TObject);
    procedure Login;
    function checkPassword(table: TADOTable): boolean;
    procedure SaveToTxtFile;
    procedure LoadFromTxtFile;
    procedure ClearTxtFile;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;
  objGlobals: TGlobals;

implementation

{$R *.dfm}

procedure TfrmLogin.btnLoginClick(Sender: TObject);
begin
  // check login
  Login;
end;

procedure TfrmLogin.Login;
begin
  if chkRememberMe.Checked = False then
    ClearTxtFile

  with dbmMainDB do
  begin
    tblEmployee.First;
    while Not tblEmployee.EOF do
    begin
      if tblEmployee['EmailAddress'] = edtLoginEmail.Text then
      begin
        if checkPassword(tblEmployee) = true then
        begin
          // login was successful
          frmEmployeeView.Show;
          if chkRememberMe.Checked = True then
            SaveToTxtFile;
          Hide;
          Exit();
        end
        else
        begin
          ShowMessage('Password wrong');
          Exit();
        end;
      end;
      tblEmployee.Next;
    end;
    // searched throught the employee table complete, now moving on to owner table
    tblOwners.First;
    while Not tblOwners.EOF do
    begin
      if tblOwners['EmailAddress'] = edtLoginEmail.Text then
      begin
        if checkPassword(tblOwners) = true then
        begin
          // login was successful
          frmOwnerView.Show;
          frmOwnerView.createOwner(tblOwners['OwnerID']);
          if chkRememberMe.Checked = True then
            SaveToTxtFile;
          Hide;
          Exit();
        end
        else
        begin
          ShowMessage('Password wrong');
          Exit();
        end;
      end;
      tblOwners.Next;
    end;
    ShowMessage('Email address not found');
  end;
end;

procedure TfrmLogin.SaveToTxtFile;
var txt_file : TextFile;
begin
  AssignFile(txt_file, 'LoginInData.txt');
  // saves current user details to txt
  Rewrite(txt_file);
  Writeln(txt_file, edtLoginEmail.Text + '#' + edtLoginPassword.Text);
  CloseFile(txt_file);

end;

procedure TfrmLogin.ClearTxtFile;
var txt_file : TextFile;
begin
AssignFile(txt_file, 'LoginInData.txt');
  // saves current user details to txt
  Rewrite(txt_file);
  CloseFile(txt_file);
end;

procedure TfrmLogin.LoadFromTxtFile;
var
  txt_file: TextFile;
  line: string;
  separatorPos: Integer;
begin
  AssignFile(txt_file, 'LoginInData.txt');
  Reset(txt_file);
  try
    // Reads the user details from the txt file
    Readln(txt_file, line);

    // Find the position of the separator (assuming it's a '#')
    separatorPos := Pos('#', line);

    // Extract and assign values to the edit boxes
    if separatorPos > 0 then
    begin
      edtLoginEmail.Text := Copy(line, 1, separatorPos - 1);
      edtLoginPassword.Text := Copy(line, separatorPos + 1, Length(line) - separatorPos);
    end;
  finally
    CloseFile(txt_file);
  end;
end;


function TfrmLogin.checkPassword(table: TAdoTable): boolean;
begin
  // test new check password
  if table['Password'] = edtLoginPassword.Text then
    begin
      Result := true;
      Exit();
    end
    else
    begin
      Result := false;
      Exit();
    end;
end;



procedure TfrmLogin.btnSignUpClick(Sender: TObject);
begin
  // takes you to the sign up page
  frmSignup.Show;
end;

procedure TfrmLogin.FormCreate(Sender: TObject);
begin
  objGlobals := TGlobals.create;
  LoadFromTxtFile;
end;

end.
